@startuml
class TimelineMarkerHeaderGUI {
    m_TrackHash : int
    + TimelineMarkerHeaderGUI(asset:TimelineAsset, state:WindowState)
    + locked : bool <<get>>
    + showMarkers : bool <<get>>
    + muted : bool <<get>>
    ToWindowSpace(rect:Rect) : Rect
    + Draw(markerHeaderRect:Rect, markerContentRect:Rect, state:WindowState) : void
    + Rebuild() : void
    HandleDragAndDrop() : void
    Hash() : int
    {static} DrawMarkerDrawer(data:DrawData, state:WindowState) : void
    {static} DrawMarkerDrawerHeaderBackground(data:DrawData) : void
    {static} DrawMarkerDrawerHeader(data:DrawData, state:WindowState) : void
    {static} DrawMarkerDrawerContentBackground(data:DrawData) : void
    {static} DrawLockButton(rect:Rect, state:WindowState) : void
    {static} DrawTrackDropDownMenu(rect:Rect, state:WindowState) : void
    {static} DrawMuteButton(rect:Rect, state:WindowState) : void
}
class DrawData <<struct>> {
    + showLockButton : bool
    + showMuteButton : bool
}
IRowGUI <|-- TimelineMarkerHeaderGUI
ILayerable <|-- TimelineMarkerHeaderGUI
TimelineMarkerHeaderGUI --> "timeline" TimelineAsset
TimelineMarkerHeaderGUI --> "state" WindowState
TimelineMarkerHeaderGUI --> "m_Layer" MarkersLayer
TimelineMarkerHeaderGUI o-> "m_ZOrder" LayerZOrder
TimelineMarkerHeaderGUI --> "asset" TrackAsset
TimelineMarkerHeaderGUI --> "boundingRect" Rect
TimelineMarkerHeaderGUI --> "zOrder" LayerZOrder
TimelineMarkerHeaderGUI +-- DrawData
DrawData --> "headerRect" Rect
DrawData --> "contentRect" Rect
DrawData --> "trackSwatchStyle" GUIStyle
DrawData --> "trackHeaderFont" GUIStyle
DrawData --> "colorTrackFont" Color
@enduml
