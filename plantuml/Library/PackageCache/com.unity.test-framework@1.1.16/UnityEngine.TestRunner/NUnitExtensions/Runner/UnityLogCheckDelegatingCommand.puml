@startuml
class UnityLogCheckDelegatingCommand {
    + UnityLogCheckDelegatingCommand(innerCommand:TestCommand)
    + <<override>> Execute(context:ITestExecutionContext) : TestResult
    + ExecuteEnumerable(context:ITestExecutionContext) : IEnumerable
    {static} CaptureException(result:TestResult, action:Action) : bool
    {static} ExecuteAndCheckLog(logScope:LogScope, result:TestResult, action:Action) : bool
    {static} PostTestValidation(logScope:LogScope, command:TestCommand, result:TestResult) : void
    {static} CheckLogs(result:TestResult, logScope:LogScope) : bool
    {static} CheckFailingLogs(logScope:LogScope, result:TestResult) : bool
    {static} CheckExpectedLogs(logScope:LogScope, result:TestResult) : bool
    {static} MustExpect(method:MemberInfo) : bool
}
class "Dictionary`2"<T1,T2> {
}
DelegatingTestCommand <|-- UnityLogCheckDelegatingCommand
IEnumerableTestMethodCommand <|-- UnityLogCheckDelegatingCommand
UnityLogCheckDelegatingCommand o-> "s_AttributeCache<object,bool?>" "Dictionary`2"
@enduml
